{"version":3,"file":"static/js/96.38d478f2.chunk.js","mappings":"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","sources":["actions/userActions.js","axiosConfig.js","components/Table.jsx","components/helper/helper.js","components/modals/AddSchoolModal.jsx","pages/AdminSchoolPage/AdminSchoolPage.jsx"],"sourcesContent":["import axios from \"../axiosConfig\";\r\nimport { setCookies } from \"../components/helper/common\";\r\nimport {\r\n  SET_TOAST_STATE,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n} from \"../constants/constants\";\r\n\r\nexport const registerSchool = (body) => async (dispatch) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      dispatch({ type: USER_REGISTER_REQUEST });\r\n      const { data } = await axios.post(\"/signup\", body);\r\n      dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n      dispatch({\r\n        type: SET_TOAST_STATE,\r\n        payload: {\r\n          showToast: true,\r\n          message: data.message,\r\n          toastType: \"success\",\r\n        },\r\n      });\r\n      resolve(data);\r\n    } catch (error) {\r\n      dispatch({ type: USER_REGISTER_FAIL });\r\n      reject(error?.response?.data?.message || error.message);\r\n    }\r\n  });\r\n};\r\n\r\nexport const loginUser = (body) => async (dispatch) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      dispatch({ type: USER_LOGIN_REQUEST });\r\n      const { data } = await axios.get(\"/students/\"+body);\r\n      dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n      dispatch({\r\n        type: SET_TOAST_STATE,\r\n        payload: {\r\n          showToast: true,\r\n          message: \"Welcome \"+data.name,\r\n          toastType: \"success\",\r\n        },\r\n      });\r\n      resolve(data);\r\n    } catch (error) {\r\n      dispatch({ type: USER_LOGIN_FAIL });\r\n      dispatch({\r\n        type: SET_TOAST_STATE,\r\n        payload: {\r\n          showToast: true,\r\n          message: \"No Student Found!\",\r\n          toastType: \"error\",\r\n        },\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nexport const gettests = (body) => async (dispatch) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      dispatch({ type: USER_REGISTER_REQUEST });\r\n      const { data } = await axios.get(\"/getAllTestsExams/\"+ body);\r\n      dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n      dispatch({\r\n        type: SET_TOAST_STATE,\r\n        payload: {\r\n          showToast: true,\r\n          message: data.message,\r\n          toastType: \"success\",\r\n        },\r\n      });\r\n      console.log(\"testsdata2222\"+JSON.stringify(data));\r\n      resolve(data);\r\n    } catch (error) {\r\n      dispatch({ type: USER_REGISTER_FAIL });\r\n      reject(error?.response?.data?.message || error.message);\r\n    }\r\n  });\r\n};\r\n\r\nexport const getAllSchoolsAction = () => (dispatch) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const { data } = await axios.get(\"/getAllSchools\");\r\n      resolve(data.schools);\r\n    } catch (error) {\r\n      dispatch({\r\n        type: SET_TOAST_STATE,\r\n        payload: {\r\n          showToast: true,\r\n          message: error?.response?.data?.message || error.message,\r\n          toastType: \"error\",\r\n        },\r\n      });\r\n      reject(error?.response?.data?.message || error.message);\r\n    }\r\n  });\r\n};\r\n","import axios from \"axios\";\r\nimport { API_BASE_URL } from \"./constants/constants\";\r\n\r\n// Create an instance of Axios\r\nconst instance = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\nconst token = JSON.parse(localStorage.getItem(\"token\"));\r\n\r\n// Add a request interceptor\r\ninstance.interceptors.request.use(\r\n  (config) => {\r\n    // Modify the request config here, such as adding headers\r\n    if (token) {\r\n      config.headers.authorization = token;\r\n    }\r\n    config.headers[\"Access-Control-Allow-Origin\"] = \"*\";\r\n    return config;\r\n  },\r\n  (error) => {\r\n    // Do something with the request error\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add a response interceptor\r\ninstance.interceptors.response.use(\r\n  (response) => {\r\n    // Do something with the response data\r\n    return response;\r\n  },\r\n  (error) => {\r\n    // Do something with the response error\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default instance;\r\n","import { Table } from \"antd\";\r\n\r\nconst TabbleComponent = ({ columns, data = [], onChange }) => {\r\n  return (\r\n    <Table\r\n      columns={columns}\r\n      dataSource={data}\r\n      onChange={onChange}\r\n      scroll={{ x: 1500, y: 600 }}\r\n      style={{ height: \"200px\" }}\r\n      pagination={false}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TabbleComponent;\r\n","import { read, utils, writeFile } from 'xlsx';\r\n\r\nexport const exportToExcel = async (downloadObject) => {\r\n    const worksheet = utils.json_to_sheet(downloadObject);\r\n    const workbook = utils.book_new();\r\n    utils.book_append_sheet(workbook, worksheet, 'Sheet 1');\r\n    writeFile(workbook, 'data.xlsx');\r\n}\r\nexport const uploadFromExcel = async (tableObject) => {\r\n    try {\r\n        const fileInput = document.createElement('input');\r\n        fileInput.type = 'file';\r\n        fileInput.accept = '.xlsx'; // Specify the accepted file type (Excel)\r\n        fileInput.addEventListener('change', async (e) => {\r\n            const file = e.target.files[0];\r\n            if (file) {\r\n                const reader = new FileReader();\r\n                reader.onload = (e) => {\r\n                    try {\r\n                        const data = new Uint8Array(e.target.result);\r\n                        const workbook = read(data, { type: 'array' });\r\n                        const sheetName = workbook.SheetNames[0]; // Assuming data is in the first sheet\r\n                        const sheet = workbook.Sheets[sheetName];\r\n                        const jsonData = utils.sheet_to_json(sheet);\r\n                        //   dispatch(createQuestion(jsonData));\r\n                        tableObject.push(jsonData);\r\n                        console.log(jsonData, \"yeh aya hai\");\r\n                        // setGridData(jsonData);\r\n                    } catch (error) {\r\n                        console.error('Error parsing Excel file:', error);\r\n                    }\r\n                };\r\n                reader.readAsArrayBuffer(file);\r\n            }\r\n        });\r\n\r\n        fileInput.click();\r\n    } catch (error) {\r\n        console.error('Error uploading question:', error);\r\n    }\r\n};","import React, { useState } from \"react\";\r\nimport { Modal } from \"antd\";\r\nconst AddSchoolModal = ({\r\n  children,\r\n  open,\r\n  setOpen,\r\n  title = \"\",\r\n  width = 1000,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Modal\r\n        title={title}\r\n        centered\r\n        open={open}\r\n        footer={false}\r\n        width={width}\r\n        onCancel={() => setOpen(false)}\r\n      >\r\n        {children}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default AddSchoolModal;\r\n","import React, { useState } from \"react\";\r\nimport TabbleComponent from \"../../components/Table\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  FloatButton,\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  Row,\r\n  Select,\r\n  Space,\r\n  Upload,\r\n} from \"antd\";\r\nimport {\r\n  CloseOutlined,\r\n  DownloadOutlined,\r\n  LoadingOutlined,\r\n  PlusOutlined,\r\n  UploadOutlined,\r\n} from \"@ant-design/icons\";\r\nimport AddSchoolModal from \"../../components/modals/AddSchoolModal\";\r\nimport { exportToExcel, uploadFromExcel } from \"../../components/helper/helper\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { registerSchool } from \"../../actions/userActions\";\r\nimport { SET_TOAST_STATE } from \"../../constants/constants\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"School Name\",\r\n    dataIndex: \"schoolName\",\r\n    width: \"30%\",\r\n  },\r\n  {\r\n    title: \"Pass Percentage\",\r\n    dataIndex: \"passPercentage\",\r\n    sorter: (a, b) => a.age - b.age,\r\n  },\r\n  {\r\n    title: \"Address\",\r\n    dataIndex: \"address\",\r\n    onFilter: (value, record) => record.address.startsWith(value),\r\n    filterSearch: true,\r\n    width: \"40%\",\r\n  },\r\n];\r\nconst data = [\r\n  {\r\n    key: \"1\",\r\n    schoolName: \"John Brown\",\r\n    passPercentage: 32,\r\n    address: \"New York No. 1 Lake Park\",\r\n  },\r\n  {\r\n    key: \"2\",\r\n    schoolName: \"Jim Green\",\r\n    passPercentage: 42,\r\n    address: \"London No. 1 Lake Park\",\r\n  },\r\n  {\r\n    key: \"3\",\r\n    schoolName: \"Joe Black\",\r\n    passPercentage: 32,\r\n    address: \"Sydney No. 1 Lake Park\",\r\n  },\r\n  {\r\n    key: \"4\",\r\n    schoolName: \"Jim Red\",\r\n    passPercentage: 32,\r\n    address: \"London No. 2 Lake Park\",\r\n  },\r\n  {\r\n    key: \"5\",\r\n    schoolName: \"John Brown\",\r\n    passPercentage: 32,\r\n    address: \"New York No. 1 Lake Park\",\r\n  },\r\n  {\r\n    key: \"6\",\r\n    schoolName: \"Jim Green\",\r\n    passPercentage: 42,\r\n    address: \"London No. 1 Lake Park\",\r\n  },\r\n  {\r\n    key: \"7\",\r\n    schoolName: \"Joe Black\",\r\n    passPercentage: 32,\r\n    address: \"Sydney No. 1 Lake Park\",\r\n  },\r\n  {\r\n    key: \"8\",\r\n    schoolName: \"Jim Red\",\r\n    passPercentage: 32,\r\n    address: \"London No. 2 Lake Park\",\r\n  },\r\n  {\r\n    key: \"9\",\r\n    schoolName: \"John Brown\",\r\n    passPercentage: 32,\r\n    address: \"New York No. 1 Lake Park\",\r\n  },\r\n];\r\nconst onChange = (pagination, filters, sorter, extra) => {\r\n  console.log(\"params\", pagination, filters, sorter, extra);\r\n};\r\nconst AdminSchoolPage = () => {\r\n  const [SchoolOpen, setSchoolOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = async (values) => {\r\n    try {\r\n      if (values.password === values.confirmPassword) {\r\n        delete values.confirmPassword;\r\n        await dispatch(registerSchool(values));\r\n        form.resetFields();\r\n        setSchoolOpen(false);\r\n      } else {\r\n        dispatch({\r\n          type: SET_TOAST_STATE,\r\n          payload: {\r\n            showToast: true,\r\n            message: \"Password does not match\",\r\n            toastType: \"error\",\r\n          },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      dispatch({\r\n        type: SET_TOAST_STATE,\r\n        payload: {\r\n          showToast: true,\r\n          message: error,\r\n          toastType: \"error\",\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const cancelSchoolRegister = () => {\r\n    form.resetFields();\r\n    setSchoolOpen(false);\r\n  };\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      <PlusOutlined />\r\n      <div\r\n        style={{\r\n          marginTop: 8,\r\n        }}\r\n      ></div>\r\n    </div>\r\n  );\r\n  return (\r\n    <>\r\n      <TabbleComponent columns={columns} data={data} onChange={onChange} />\r\n      <FloatButton.Group\r\n        trigger=\"hover\"\r\n        type=\"primary\"\r\n        style={{ right: 70 }}\r\n        icon={<PlusOutlined />}\r\n      >\r\n        <FloatButton\r\n          icon={<PlusOutlined />}\r\n          type=\"primary\"\r\n          shape=\"circle\"\r\n          onClick={() => setSchoolOpen(true)}\r\n        />\r\n        <FloatButton\r\n          icon={<UploadOutlined />}\r\n          type=\"primary\"\r\n          shape=\"circle\"\r\n          onClick={() => uploadFromExcel(data)}\r\n        />\r\n        <FloatButton\r\n          icon={<DownloadOutlined />}\r\n          type=\"primary\"\r\n          shape=\"circle\"\r\n          onClick={() => exportToExcel(data)}\r\n        />\r\n      </FloatButton.Group>\r\n      <AddSchoolModal open={SchoolOpen} setOpen={() => setSchoolOpen(false)}>\r\n        <Form\r\n          name=\"trigger\"\r\n          layout=\"vertical\"\r\n          autoComplete=\"off\"\r\n          onFinish={onFinish}\r\n          initialValues={{ role: \"subAdmin\" }}\r\n          form={form}\r\n        >\r\n          <Row gutter={16}>\r\n            <Col md={8}>\r\n              <Form.Item label=\"School Name\" required name=\"schoolName\">\r\n                <Input placeholder=\"Enter School Name\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={8}>\r\n              <Form.Item label=\"Select School Type\" required name=\"schoolType\">\r\n                <Select allowClear placeholder=\"Select School Type\">\r\n                  <Select.Option value=\"government\">Government</Select.Option>\r\n                  <Select.Option value=\"private\">Private</Select.Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={8}>\r\n              <Form.Item label=\"Contact Number\" required name=\"contactNumber\">\r\n                <Input max={10} addonBefore=\"+91\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={8}>\r\n              <Form.Item label=\"School Website\" required name=\"website\">\r\n                <Input addonBefore=\"https://\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={8}>\r\n              <Form.Item label=\"School Number\" required name=\"schoolNumber\">\r\n                <Input max={10} addonBefore=\"+91\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={8}>\r\n              <Form.Item label=\"School Email Address\" required name=\"email\">\r\n                <Input placeholder=\"Enter School Email\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={12}>\r\n              <Form.Item label=\"Enter Full Address\" name=\"address\">\r\n                <Input.TextArea\r\n                  showCount\r\n                  maxLength={100}\r\n                  style={{ height: 100, resize: \"none\" }}\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col\r\n              md={12}\r\n              className=\"d-flex align-items-center justify-content-center\"\r\n            >\r\n              <Form.Item name=\"logo\" label=\"Upload Logo\">\r\n                <Upload\r\n                  name=\"avatar\"\r\n                  listType=\"picture-card\"\r\n                  className=\"avatar-uploader\"\r\n                  showUploadList={false}\r\n                  action=\"https://run.mocky.io/v3/435e224c-44fb-4773-9faf-380c5e6a2188\"\r\n                  // beforeUpload={beforeUpload}\r\n                  // onChange={handleChange}\r\n                >\r\n                  {uploadButton}\r\n                </Upload>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={8}>\r\n              <Form.Item label=\"Enter Username\" required name=\"userName\">\r\n                <Input placeholder=\"Enter Username\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={8}>\r\n              <Form.Item label=\"Enter Password\" required name=\"password\">\r\n                <Input placeholder=\"Enter Username\" type=\"password\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={8}>\r\n              <Form.Item\r\n                label=\"Confirm Password\"\r\n                required\r\n                name=\"confirmPassword\"\r\n              >\r\n                <Input placeholder=\"Enter Confirm Password\" type=\"password\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={8} className=\"d-none\">\r\n              <Form.Item label=\"Role\" name=\"role\">\r\n                <Input disabled type=\"password\" value=\"subAdmin\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={24}>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n              <Button\r\n                className=\"bg-danger text-white mx-2\"\r\n                onClick={cancelSchoolRegister}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </AddSchoolModal>\r\n    </>\r\n  );\r\n};\r\nexport default AdminSchoolPage;\r\n"],"names":["registerSchool","body","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","dispatch","wrap","_context2","prev","next","abrupt","Promise","_ref2","_callee","resolve","reject","_yield$axios$post","data","_error$response","_error$response$data","_context","type","USER_REGISTER_REQUEST","axios","post","sent","USER_REGISTER_SUCCESS","payload","SET_TOAST_STATE","showToast","message","toastType","t0","USER_REGISTER_FAIL","response","stop","_x2","_x3","apply","arguments","_x","getAllSchoolsAction","_ref7","_callee7","_yield$axios$get3","_error$response3","_error$response3$data","_error$response4","_error$response4$data","_context7","get","schools","_x10","_x11","instance","create","baseURL","API_BASE_URL","headers","token","JSON","parse","localStorage","getItem","interceptors","request","use","config","authorization","error","columns","_ref$data","onChange","_jsx","Table","dataSource","scroll","x","y","style","height","pagination","exportToExcel","downloadObject","worksheet","workbook","utils","json_to_sheet","book_new","book_append_sheet","writeFile","uploadFromExcel","_callee3","tableObject","fileInput","_context3","document","createElement","accept","addEventListener","_ref3","e","file","reader","target","files","FileReader","onload","Uint8Array","result","read","sheetName","SheetNames","sheet","Sheets","jsonData","sheet_to_json","push","console","log","readAsArrayBuffer","click","children","open","setOpen","_ref$title","title","_ref$width","width","_Fragment","Modal","centered","footer","onCancel","dataIndex","sorter","a","b","age","onFilter","value","record","address","startsWith","filterSearch","key","schoolName","passPercentage","filters","extra","_useState","useState","_useState2","_slicedToArray","SchoolOpen","setSchoolOpen","useDispatch","_Form$useForm","Form","useForm","form","onFinish","values","password","confirmPassword","resetFields","uploadButton","_jsxs","PlusOutlined","marginTop","TabbleComponent","FloatButton","Group","trigger","right","icon","shape","onClick","UploadOutlined","DownloadOutlined","AddSchoolModal","name","layout","autoComplete","initialValues","role","Row","gutter","Col","md","Item","label","required","Input","placeholder","Select","allowClear","Option","max","addonBefore","TextArea","showCount","maxLength","resize","className","Upload","listType","showUploadList","action","disabled","Button","htmlType"],"sourceRoot":""}
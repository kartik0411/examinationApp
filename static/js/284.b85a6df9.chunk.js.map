{"version":3,"file":"static/js/284.b85a6df9.chunk.js","mappings":"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","sources":["axiosConfig.js","components/Table copy.jsx","pages/StudentPages/Report.jsx","pages/StudentPages/ExamPreviewPage/ExamPreview.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { API_BASE_URL } from \"./constants/constants\";\r\n\r\n// Create an instance of Axios\r\nconst instance = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\nconst token = JSON.parse(localStorage.getItem(\"token\"));\r\n\r\n// Add a request interceptor\r\ninstance.interceptors.request.use(\r\n  (config) => {\r\n    // Modify the request config here, such as adding headers\r\n    if (token) {\r\n      config.headers.authorization = token;\r\n    }\r\n    config.headers[\"Access-Control-Allow-Origin\"] = \"*\";\r\n    return config;\r\n  },\r\n  (error) => {\r\n    // Do something with the request error\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add a response interceptor\r\ninstance.interceptors.response.use(\r\n  (response) => {\r\n    // Do something with the response data\r\n    return response;\r\n  },\r\n  (error) => {\r\n    // Do something with the response error\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default instance;\r\n","\r\nimport * as React from \"react\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nexport function Table(props) {\r\n  const {\r\n    rows,\r\n    columns,\r\n    checkboxSelection,\r\n    initialState,\r\n    disableSelectionOnClick,\r\n    pageSizeOptions,\r\n    height,\r\n    width,\r\n  } = props;\r\n  return (\r\n    <div style={{ height: height, width: width }}>\r\n      <DataGrid\r\n        rows={rows}\r\n        height={height}\r\n        width={width}\r\n        columns={columns}\r\n        getRowHeight={() => \"auto\"}\r\n        initialState={initialState}\r\n        pageSizeOptions={pageSizeOptions}\r\n        checkboxSelection={checkboxSelection}\r\n        disableSelectionOnClick={disableSelectionOnClick}\r\n        getRowId={(row) => row._id}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function TableWithoutPagination(props) {\r\n  const {\r\n    rows,\r\n    columns,\r\n    checkboxSelection,\r\n    disableSelectionOnClick,\r\n    height,\r\n    width,\r\n  } = props;\r\n  return (\r\n    <div style={{ height: height, width: width }}>\r\n      <DataGrid\r\n        rows={rows}\r\n        height={height}\r\n        width={width}\r\n        columns={columns}\r\n        getRowHeight={() => \"auto\"}\r\n        checkboxSelection={checkboxSelection}\r\n        disableSelectionOnClick={disableSelectionOnClick}\r\n        getRowId={(row) => row._id}\r\n        hideFooter\r\n      />\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { pdf, Page, Text, View, Document, StyleSheet, Image } from '@react-pdf/renderer';\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Download from '@mui/icons-material/Download';\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"../../axiosConfig\";\r\nimport { TableWithoutPagination } from '../../components/Table copy'\r\nimport { BarChart } from '@mui/x-charts/BarChart'; \r\nimport { axisClasses } from '@mui/x-charts/ChartsAxis';\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\n// Create styles\r\nconst styles = StyleSheet.create({\r\n  page: {\r\n    flexDirection: 'row',\r\n    backgroundColor: '#E4E4E4'\r\n  },\r\n  section: {\r\n    margin: 10,\r\n    padding: 10,\r\n    flexGrow: 1\r\n  }\r\n});\r\n\r\nconst tableOptions = {\r\n  height: \"auto\",\r\n  width: \"100%\",\r\n  checkboxSelection: false,\r\n  disableSelectionOnClick: true,\r\n};\r\n\r\nconst columns = [\r\n  {\r\n    field: \"code\",\r\n    headerName: \"Code\",\r\n    flex: 1\r\n  },\r\n  {\r\n    field: \"name\",\r\n    headerName: \"Exam Name\",\r\n    flex: 2\r\n  },\r\n  {\r\n    field: \"detail\",\r\n    headerName: \"Detail\",\r\n    flex: 5\r\n  },\r\n  {\r\n    field: \"score\",\r\n    headerName: \"Score\",\r\n    flex: 1\r\n  },\r\n]\r\n\r\n\r\n\r\n\r\n// Create Document Component\r\nfunction Report(props) {\r\n  const { onClose, selectedValue, open } = props;\r\n  const [report, setReport] = useState({});\r\n  const [showDialogActions, setDialogActions] = useState(true);\r\n  const [divref,setDivRef] = useState();\r\n  const [isFetching, setIsFetching] = useState();\r\n\r\n  // const [paddingTest, setPaddingTest] = useState(100);\r\n  console.log(\"hddsds\")\r\n  const handleClose = () => {\r\n    setDivRef(null)\r\n    // setPaddingTest(100);\r\n    onClose(selectedValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (open == true) {\r\n      getStudentTestReport();\r\n    }\r\n  }, [open]);\r\n\r\n  // useEffect(() => {\r\n  //   if (divref!=null) {\r\n  //     if(divref.offsetHeight) {\r\n  //       console.log(divref);\r\n  //       console.log(JSON.stringify(paddingTest));\r\n  //       console.log(JSON.stringify(divref.offsetHeight));\r\n  //       setPaddingTest(paddingTest+divref.offsetHeight-2000);\r\n  //     }\r\n  //   }\r\n  // }, [divref]);\r\n\r\n  const getStudentTestReport = async () => {\r\n    if (selectedValue && selectedValue._id) {\r\n      setIsFetching(true);\r\n      let reportvalue;\r\n      if(selectedValue.testid && selectedValue.testid!=\"\") {\r\n        reportvalue = await axios.get(\"/report/\" + selectedValue._id + \"/\" + selectedValue.testid)\r\n      } else {\r\n        reportvalue = await axios.get(\"/report/\" + selectedValue._id)\r\n      }\r\n      setIsFetching(false);\r\n      setReport(reportvalue.data);\r\n    }\r\n  }\r\n  function getTestTypeDesc(type) {\r\n    if (type == 1) {\r\n      return \"Personality\";\r\n    } else if (type == 2) {\r\n      return \"Aptitude\";\r\n    } else {\r\n      return \"Interest\";\r\n    }\r\n  }\r\n\r\n  const handleDownload = async () => {\r\n    // const fileName = selectedValue?.name + '_Report.pdf';\r\n    // const blob = await pdf(\r\n    //   <Document>\r\n    //     <Page size=\"A4\" style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', height: '100%' }}>\r\n    //       <View style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', marginBottom: 20 }}>\r\n    //         <Image\r\n    //           src=\"https://www.myndkare.com/wp-content/uploads/2021/05/cropped-myndkare-logo-115x57.png\"\r\n    //           style={{ height: 64, marginRight: 10 }} // Adjusted to match the height in the original code\r\n    //         />\r\n    //         <View>\r\n    //           <Text>MYNDKARE</Text>\r\n    //         </View>\r\n    //       </View>\r\n    //     </Page>\r\n    //     <Page size=\"A4\" style={styles.page}>\r\n    //       <View style={styles.section}>\r\n    //         <Text>Section #1</Text>\r\n    //       </View>\r\n    //       <View style={styles.section}>\r\n    //         <Text>Section #2</Text>\r\n    //       </View>\r\n    //     </Page>\r\n    //   </Document>\r\n    // ).toBlob();\r\n\r\n    // saveAs(blob, fileName);\r\n    setDialogActions(false);\r\n    // window.print();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (showDialogActions == false) {\r\n      window.print();\r\n      setTimeout(() => {\r\n        console.log('Executed after 1 second');\r\n      }, 1000);\r\n      setDialogActions(true);\r\n    }\r\n  }, [showDialogActions]);\r\n\r\n\r\n  const chartSetting = {\r\n    yAxis: [\r\n      {\r\n        label: '',\r\n        min: 0,\r\n        max: 10,\r\n      },\r\n    ],\r\n    width: 750,\r\n    height: 500,\r\n    sx: {\r\n      [`.${axisClasses.left} .${axisClasses.label}`]: {\r\n        transform: 'translate(-20px, 0)',\r\n      },\r\n    },\r\n  };\r\n\r\n\r\n\r\n  if (isFetching) {\r\n    return (\r\n      <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  } else {\r\n  return (\r\n    <>\r\n      {selectedValue?._id && report && report.length > 0 &&\r\n        <><Dialog fullWidth maxHeight=\"80vh\" PaperProps={{\r\n          style: { minHeight: '80vh' } // Set minHeight here\r\n        }} maxWidth=\"md\" onClose={handleClose} open={open}>\r\n          {showDialogActions && (<DialogTitle>Test Report</DialogTitle>)}\r\n          <DialogContent>\r\n            <Document>\r\n              <Page size={[600, 11000]} style={{\r\n                display: 'flex',\r\n                flexDirection: 'row',\r\n              }}>\r\n                <a >\r\n                  <div style={{ display: 'flex' }}>\r\n                    <img\r\n                      src=\"https://www.myndkare.com/wp-content/uploads/2021/05/cropped-myndkare-logo-115x57.png\"\r\n                      className=\"h-16 mr-3\"\r\n                      alt=\"Myndkare Logo\"\r\n                      style={{ height: 75, width: 150 }}\r\n                    />\r\n                    <Text style={{ fontSize: 60, color: '#1adb4e', fontWeight: \"bold\", marginLeft: 102 }}>MYNDKARE\r\n                    </Text>\r\n                  </div>\r\n                  <div style={{ marginLeft: 260 }}  >\r\n                    <Text style={{ fontSize: 17, color: '#000000' }}>Career Testing and Counselling Services\r\n                    </Text>\r\n                  </div>\r\n                  {selectedValue.testid == null && (\r\n                    <div style={{ marginLeft: 292 }}  >\r\n                      <Text style={{ fontSize: 12, color: '#000000' }}>Certification no: {selectedValue._id}\r\n                      </Text>\r\n                    </div>\r\n                  )}\r\n                  <div style={{ marginLeft: 215, marginTop: 20 }} >\r\n                    <Text style={{ fontSize: 21, color: '#000000', textDecorationLine: 'underline', fontWeight: 'bold' }}>CAREER TESTING AND GUIDANCE REPORT\r\n                    </Text>\r\n                  </div>\r\n                  <div className=\"absolute left-1/2 transform -translate-x-1/2\" style={{ marginLeft: 335, marginTop: 20 }} >\r\n                    <Text style={{ fontSize: 16, color: '#000000', textDecorationLine: 'underline' }}> STUDENT INFORMATION\r\n                    </Text>\r\n                  </div>\r\n                  {/* Student Details */}\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <div >\r\n                      <Text style={{ fontSize: 15, color: '#000000', marginLeft: 10 }}>Student Name:</Text>\r\n                      <Text style={{ fontSize: 15, color: '#000000', fontWeight: '300', marginLeft: 5 }}>\r\n                        {selectedValue?.name}\r\n                      </Text>\r\n                    </div>\r\n\r\n                    <div className=\"absolute\" style={{ left: '65%'}}>\r\n                      <Text style={{ fontSize: 15, color: '#000000' }}>Admission No:</Text>\r\n                      <Text style={{ fontSize: 15, color: '#000000', fontWeight: '300', marginLeft: 5 }}>\r\n                        {selectedValue?.admsnno}\r\n                      </Text>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* School and Class Details */}\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <div >\r\n                      <Text style={{ fontSize: 15, color: '#000000', marginLeft: 10 }}>School:</Text>\r\n                      <Text style={{ fontSize: 15, color: '#000000', fontWeight: '300', marginLeft: 5 }}>\r\n                        {selectedValue?.school}\r\n                      </Text>\r\n                    </div>\r\n\r\n                    <div className=\"absolute\" style={{ left: '65%' }}>\r\n                      <Text style={{ fontSize: 15, color: '#000000' }}>Class:</Text>\r\n                      <Text style={{ fontSize: 15, color: '#000000', fontWeight: '300', marginLeft: 5 }}>\r\n                        {(selectedValue?.section && selectedValue?.section !== \"\") ? (selectedValue?.class + \" - \" + selectedValue?.section) : (selectedValue?.class)}\r\n                      </Text>\r\n                    </div>\r\n                  </div>\r\n                  {/* Horizontal Line */}\r\n                  {/* <hr style={{ width: '100%', border: '1px solid #000', marginTop: 350 }} /> */}\r\n                </a>\r\n\r\n\r\n              </Page>\r\n              <Page size={[600, 11000]} style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                flexDirection: 'column',\r\n                gap: 50,\r\n                marginTop: 20\r\n              }}>\r\n                <a>\r\n                  <hr style={{ width: '100%', border: '1px solid #000' }} />\r\n                  {report?.map(testReport => (\r\n                    <><div style={{\r\n                      display: 'flex',\r\n                      flexDirection: 'column',\r\n                      gap: 20,\r\n                      width: '100%',\r\n                    }}>\r\n                      {testReport.type == 1 && <>\r\n                        <div style={{ textAlign: 'center' }}>\r\n                          <Text style={{ fontSize: 20, color: '#000000', textDecorationLine: 'underline' }}> {testReport.name} (Personality Test)\r\n                          </Text>\r\n                        </div>\r\n                        <div style={{\r\n                          textAlign: 'left',\r\n                          display: 'flex',\r\n                          flexDirection: 'column',\r\n                          gap: 2,\r\n                        }}>\r\n                          {testReport?.examsResults.map(exam => (\r\n                            <><Text style={{ fontSize: 16, color: '#000000', textDecorationLine: 'underline' }}>{exam?.name} Personality Type:\r\n                            </Text>\r\n                              <p style={{ fontSize: 14, color: '#000000' }}> {exam.output}\r\n                              </p>\r\n                            </>\r\n                          ))}\r\n                        </div>\r\n                      </>}\r\n                      {testReport.type == 2 && <>\r\n                        <div style={{ textAlign: 'center' }}>\r\n                          <Text style={{ fontSize: 20, color: '#000000', textDecorationLine: 'underline' }}> {testReport.name} (Aptitude Test)\r\n                          </Text>\r\n                        </div>\r\n                        <TableWithoutPagination\r\n                          height={tableOptions.height}\r\n                          width={tableOptions.width}\r\n                          rows={testReport.dbdaResults}\r\n                          columns={columns}\r\n                          checkboxSelection={tableOptions.checkboxSelection}\r\n                          disableSelectionOnClick={tableOptions.disableSelectionOnClick} />\r\n                        <div style={{ textAlign: 'center' }}>\r\n                          <Text style={{ fontSize: 16, color: '#000000', textDecorationLine: 'underline' }}> APTITUDE PROFILE\r\n                          </Text>\r\n                        </div>\r\n                        <div style={{ textAlign: 'center' }}>\r\n                          <BarChart dataset={testReport.dbdaResults}\r\n                            xAxis={[{ scaleType: 'band', dataKey: 'code', label: 'ABILITIES' }]}\r\n                            series={[\r\n                              { dataKey: 'score', label: testReport.name + ' Scores' },\r\n                            ]}\r\n                            {...chartSetting} />\r\n                        </div>\r\n                        <div style={{\r\n                          textAlign: 'left',\r\n                          display: 'flex',\r\n                          flexDirection: 'column',\r\n                          gap: 2,\r\n                        }}>\r\n                          <Text style={{ fontSize: 16, color: '#000000', textDecorationLine: 'underline' }}> Areas of Proficiency:\r\n                          </Text>\r\n                          {testReport?.proficiency?.map(prof => (\r\n                            <p style={{ fontSize: 14, color: '#000000' }}> {'\\u2022'}{prof}\r\n                            </p>\r\n                          ))}\r\n                        </div>\r\n                        <div style={{\r\n                          textAlign: 'left',\r\n                          display: 'flex',\r\n                          flexDirection: 'column',\r\n                          gap: 2,\r\n                        }}>\r\n                          <Text style={{ fontSize: 16, color: '#000000', textDecorationLine: 'underline' }}> Areas of Strength:\r\n                          </Text>\r\n                          {testReport?.strength?.map(prof => (\r\n                            <p style={{ fontSize: 14, color: '#000000' }}> {'\\u2022'}{prof}\r\n                            </p>\r\n                          ))}\r\n                        </div>\r\n                        <div style={{\r\n                          textAlign: 'left',\r\n                          display: 'flex',\r\n                          flexDirection: 'column',\r\n                          gap: 2,\r\n                        }}>\r\n                          <Text style={{ fontSize: 16, color: '#000000', textDecorationLine: 'underline' }}> Areas of Improvement:\r\n                          </Text>\r\n                          {testReport?.improvement?.map(prof => (\r\n                            <p style={{ fontSize: 14, color: '#000000' }}> {'\\u2022'}{prof}\r\n                            </p>\r\n                          ))}\r\n                        </div>\r\n\r\n\r\n                      </>}\r\n                      {testReport.type == 3 && <>\r\n                        <div style={{ textAlign: 'center' }}>\r\n                          <Text style={{ fontSize: 20, color: '#000000', textDecorationLine: 'underline' }}> {testReport.name} (Interest Test)\r\n                          </Text>\r\n                        </div>\r\n                      </>}\r\n                      {testReport.type == 4 && <>\r\n                        <div style={{ textAlign: 'center' }}>\r\n                          <Text style={{ fontSize: 20, color: '#000000', textDecorationLine: 'underline' }}> Counsellor Feedback\r\n                          </Text>\r\n                        </div>\r\n                        <div style={{\r\n                          textAlign: 'left',\r\n                          display: 'flex',\r\n                          flexDirection: 'column',\r\n                          gap: 2,\r\n                        }}>\r\n                          <><Text style={{ fontSize: 15, color: '#000000', fontWeight: \"bold\" }}>Academic:\r\n                          </Text>\r\n                            <p style={{ fontSize: 14, color: '#000000' }}>{testReport?.feedback?.feedbacks[0]}\r\n                            </p>\r\n                            <Text style={{ fontSize: 15, color: '#000000', fontWeight: \"bold\" }}>Personal Interaction Child:\r\n                            </Text>\r\n                            <p style={{ fontSize: 14, color: '#000000' }}>{testReport?.feedback?.feedbacks[1]}\r\n                            </p>\r\n                            <Text style={{ fontSize: 15, color: '#000000', fontWeight: \"bold\" }}>Personal Interactions Parents:\r\n                            </Text>\r\n                            <p style={{ fontSize: 14, color: '#000000' }}>{testReport?.feedback?.feedbacks[2]}\r\n                            </p>\r\n                            <Text style={{ fontSize: 15, color: '#000000', fontWeight: \"bold\" }}>Suggested Career or Stream Option-1:\r\n                            </Text>\r\n                            <p style={{ fontSize: 14, color: '#000000' }}>{testReport?.feedback?.feedbacks[3]}\r\n                            </p>\r\n                            <Text style={{ fontSize: 15, color: '#000000', fontWeight: \"bold\" }}>Suggested Career or Stream Option-2:\r\n                            </Text>\r\n                            <p style={{ fontSize: 14, color: '#000000' }}>{testReport?.feedback?.feedbacks[4]}\r\n                            </p>\r\n                            <Text style={{ fontSize: 15, color: '#000000', fontWeight: \"bold\" }}>Counsellor Remarks:\r\n                            </Text>\r\n                            <p style={{ fontSize: 14, color: '#000000' }}>{testReport?.feedback?.feedbacks[5]}\r\n                            </p>\r\n                            <wbr></wbr>\r\n                            <Text style={{ fontSize: 14, color: '#000000' }}> Regards,\r\n                            </Text>\r\n                            <Text style={{ fontSize: 14, color: '#000000' }}> For & on behalf of\r\n                            </Text>\r\n                            <Text style={{ fontSize: 14, color: '#000000' }}> MyndKare\r\n                            </Text>\r\n                            <wbr></wbr>\r\n                            <wbr></wbr>\r\n                            <p style={{ fontSize: 14, color: '#000000', fontWeight: \"bold\" }}>{testReport?.feedback?.feedbacks[6]}\r\n                            </p>\r\n                            <Text style={{ fontSize: 14, color: '#000000' }}>Clinical Psychologist\r\n                            </Text>\r\n\r\n                          </>\r\n                        </div>\r\n                      </>}\r\n                    </div>\r\n                      <hr style={{ width: '100%', border: '1px solid #000' }} /></>\r\n                  ))}\r\n                </a>\r\n              </Page>\r\n            </Document>\r\n\r\n          </DialogContent>\r\n          {showDialogActions && (\r\n            <DialogActions>\r\n              <Button onClick={handleClose}>Close</Button>\r\n              <Button size=\"small\" variant=\"contained\" style={{\r\n                backgroundColor: \"#8F00FF\"\r\n              }} startIcon={<Download />} onClick={handleDownload} >Download</Button>\r\n            </DialogActions>\r\n          )}\r\n        </Dialog></>\r\n\r\n\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\n}\r\n\r\nexport default Report","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Collapse, Row } from \"antd\";\r\nimport { useNavigate, usenavigate } from \"react-router-dom\";\r\nimport { DownloadOutlined, FundViewOutlined } from \"@ant-design/icons\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { showQuestions } from \"../../../redux/questionSlice\";\r\nimport { SET_TOAST_STATE } from \"../../../constants/constants\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from \"../../../axiosConfig\";\r\nimport Report from \"./../Report\";\r\n\r\nconst ExamPreview = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { state } = useLocation();\r\n  const [ state1, setState1 ] = useState();\r\n  const [reportOpen, setReportOpen] = useState(false);\r\n  const [reportValue, setReportValue] = useState({});\r\n  const downloadReport = () => {\r\n    // console.log(navigate);\r\n  };\r\n  const viewReport = () => {\r\n    let report = state;\r\n    setReportValue(report);\r\n    setReportOpen(true);\r\n  };\r\n\r\n\r\n  const fetchStudentExamData = async () => { \r\n    const { data } = await axios.get(\"/getAllTestsExams/\"+state._id);\r\n    setState1(data);\r\n  }\r\n\r\n  window.onpopstate = () => {\r\n    navigate(\"/\");\r\n    window.location.reload();\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchStudentExamData();\r\n  }, []);\r\n\r\n  const onOpenQuestions = async (examId, studentId) => {\r\n    try {\r\n      navigate(\"/student/exam/\"+examId,{state: {studentId: studentId,examId: examId }});\r\n    } catch (error) {\r\n      dispatch({\r\n        type: SET_TOAST_STATE,\r\n        payload: {\r\n          showToast: true,\r\n          message: error,\r\n          toastType: \"error\",\r\n        },\r\n      });\r\n    }\r\n  };\r\n  const handleReportClose = (value) => {\r\n    setReportOpen(false);\r\n\r\n  };\r\nlet items = [];\r\n  for(let i=0;i<state1?.response.length;i++) {\r\n    let rows = [];\r\n    state1?.response[i].exams.forEach(element => {\r\n      let timerText = \"\"; \r\n      if(element.timer===true) {\r\n        timerText = \"Time : \"+element.duration+\" Seconds\";\r\n      }\r\n      let row = new Object();\r\n    if(element.buttonFlag===true) { \r\n      row = (<Row>\r\n        <Col md={12}>\r\n          <h5>{element.name}</h5>\r\n          <h6>Questions : {element.countQuestions}</h6>\r\n          <h6>{timerText}</h6>\r\n        </Col> \r\n        <Col md={12}>\r\n          <Button\r\n            className=\"bg-success text-light btn-float\"\r\n            size=\"large\"\r\n            onClick={() => onOpenQuestions(element._id,state1?._id)}\r\n          >\r\n            {element.buttonText}\r\n          </Button>\r\n        </Col>\r\n      </Row>);\r\n    } else {\r\n      row= (<Row>\r\n        <Col md={12}>\r\n          <h5>{element.name}</h5>\r\n          <h6>Qusetions : {element.countQuestions}</h6>\r\n          <h6>{timerText}</h6>\r\n        </Col> \r\n        <Col md={12}>\r\n          <Button\r\n            className=\"text-dark btn-float\"\r\n            size=\"large\"\r\n            onClick={() => navigate(\"/student/exam/23456\")}\r\n            disabled\r\n          >\r\n            {element.buttonText}\r\n          </Button>\r\n        </Col> \r\n      </Row>);\r\n    }\r\n    rows.push(row);\r\n    });\r\n\r\n    let obj =  {\r\n      key: \"1\",\r\n      label: state1?.response[i].testName,\r\n      children: rows,\r\n    };\r\n    items.push(obj);\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <Row gutter={16} className=\"p-5\">\r\n          {items.map((collapse) => (\r\n            <Col md={24} className=\"m-4\">\r\n              <Collapse\r\n                size=\"large\"\r\n                items={[collapse]}\r\n                defaultActiveKey={[collapse.key]}\r\n              />\r\n            </Col>\r\n          ))}\r\n          <Button\r\n            className=\"mx-5\"\r\n            type=\"primary\"\r\n            icon={<FundViewOutlined />}\r\n            size=\"large\"\r\n            onClick={() => viewReport()}\r\n            disabled = {!state1?.resultPublish}\r\n          >\r\n            View Report\r\n          </Button>\r\n        </Row>\r\n      </div>\r\n      <Report\r\n                    selectedValue={reportValue}\r\n                    open={reportOpen}\r\n                    onClose={handleReportClose} />\r\n    </>\r\n  );\r\n};\r\nexport default ExamPreview;\r\n"],"names":["instance","axios","create","baseURL","API_BASE_URL","headers","token","JSON","parse","localStorage","getItem","interceptors","request","use","config","authorization","error","Promise","reject","response","TableWithoutPagination","props","rows","columns","checkboxSelection","disableSelectionOnClick","height","width","_jsx","style","children","DataGrid","getRowHeight","getRowId","row","_id","hideFooter","tableOptions","StyleSheet","page","flexDirection","backgroundColor","section","margin","padding","flexGrow","field","headerName","flex","onClose","selectedValue","open","_useState","useState","_useState2","_slicedToArray","report","setReport","_useState3","_useState4","showDialogActions","setDialogActions","_useState5","_useState6","setDivRef","_useState7","_useState8","isFetching","setIsFetching","console","log","handleClose","useEffect","getStudentTestReport","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","reportvalue","wrap","_context","prev","next","testid","get","sent","data","stop","apply","arguments","handleDownload","_ref2","_callee2","_context2","window","print","setTimeout","chartSetting","yAxis","label","min","max","sx","_defineProperty","concat","axisClasses","left","transform","Box","display","justifyContent","CircularProgress","_Fragment","length","_jsxs","Dialog","fullWidth","maxHeight","PaperProps","minHeight","maxWidth","DialogTitle","DialogContent","Document","Page","size","src","className","alt","Text","fontSize","color","fontWeight","marginLeft","marginTop","textDecorationLine","name","admsnno","school","class","gap","border","map","testReport","_testReport$proficien","_testReport$strength","_testReport$improveme","_testReport$feedback","_testReport$feedback2","_testReport$feedback3","_testReport$feedback4","_testReport$feedback5","_testReport$feedback6","_testReport$feedback7","type","textAlign","examsResults","exam","output","dbdaResults","BarChart","_objectSpread","dataset","xAxis","scaleType","dataKey","series","proficiency","prof","strength","improvement","feedback","feedbacks","DialogActions","Button","onClick","variant","startIcon","Download","navigate","useNavigate","dispatch","useDispatch","state","useLocation","state1","setState1","reportOpen","setReportOpen","reportValue","setReportValue","fetchStudentExamData","_yield$axios$get","onpopstate","location","reload","onOpenQuestions","examId","studentId","SET_TOAST_STATE","payload","showToast","message","toastType","_x","_x2","items","_loop","i","exams","forEach","element","timerText","timer","duration","Object","buttonFlag","Row","Col","md","countQuestions","buttonText","disabled","push","obj","key","testName","gutter","collapse","Collapse","defaultActiveKey","icon","FundViewOutlined","resultPublish","Report","value"],"sourceRoot":""}